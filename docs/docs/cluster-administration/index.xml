<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cluster Administration on </title>
    <link>https://cnimages.github.io/website/docs/cluster-administration/</link>
    <description>Recent content in Cluster Administration on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://cnimages.github.io/website/docs/cluster-administration/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Persistent Volume and Storage Class</title>
      <link>https://cnimages.github.io/website/docs/cluster-administration/persistent-volume-and-storage-class/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cnimages.github.io/website/docs/cluster-administration/persistent-volume-and-storage-class/</guid>
      <description>This tutorial describes the basic concepts of PVs, PVCs and storage classes and demonstrates how a cluster administrator can manage storage classes and persistent volumes in KubeSphere.
Introduction A PersistentVolume (PV) is a piece of storage in the cluster that has been provisioned by an administrator or dynamically provisioned using Storage Classes. PVs are volume plugins like Volumes, but have a lifecycle independent of any individual Pod that uses the PV.</description>
    </item>
    
    <item>
      <title>Node Management</title>
      <link>https://cnimages.github.io/website/docs/cluster-administration/nodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cnimages.github.io/website/docs/cluster-administration/nodes/</guid>
      <description>Kubernetes runs your workloads by placing containers into Pods to run on nodes. A node may be a virtual or physical machine, depending on the cluster. Each node contains the services necessary to run Pods, managed by the control plane. For more information about nodes, see the official documentation of Kubernetes.
This tutorial demonstrates what a cluster administrator can view and do for nodes within a cluster.
Prerequisites You need an account granted a role including the authorization of Clusters Management.</description>
    </item>
    
    <item>
      <title>Cluster Status Monitoring</title>
      <link>https://cnimages.github.io/website/docs/cluster-administration/cluster-status-monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cnimages.github.io/website/docs/cluster-administration/cluster-status-monitoring/</guid>
      <description>KubeSphere provides monitoring of related metrics such as CPU, memory, network, and disk of the cluster. You can also review historical monitoring data and sort nodes by different indicators based on their usage in Cluster Status Monitoring.
Prerequisites You need an account granted a role including the authorization of Clusters Management. For example, you can log in the console as admin directly or create a new role with the authorization and assign it to an account.</description>
    </item>
    
    <item>
      <title>Application Resources Monitoring</title>
      <link>https://cnimages.github.io/website/docs/cluster-administration/application-resources-monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cnimages.github.io/website/docs/cluster-administration/application-resources-monitoring/</guid>
      <description>In addition to monitoring data at the physical resource level, cluster administrators also need to keep a close track of application resources across the platform, such as the number of projects and DevOps projects, as well as the number of workloads and services of a specific type. Application resource monitoring provides a summary of resource usage and application-level trends of the platform.
Prerequisites You need an account granted a role including the authorization of Clusters Management.</description>
    </item>
    
    <item>
      <title>Customizing Platform Information</title>
      <link>https://cnimages.github.io/website/docs/cluster-administration/platform-settings/customize-basic-information/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cnimages.github.io/website/docs/cluster-administration/platform-settings/customize-basic-information/</guid>
      <description>TBD</description>
    </item>
    
    <item>
      <title>Cluster Shutdown and Restart</title>
      <link>https://cnimages.github.io/website/docs/cluster-administration/shut-down-and-restart-cluster-gracefully/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cnimages.github.io/website/docs/cluster-administration/shut-down-and-restart-cluster-gracefully/</guid>
      <description>This document describes the process of gracefully shutting down your cluster and how to restart it. You might need to temporarily shut down your cluster for maintenance reasons.
Warning
Shutting down a cluster is very dangerous. You must fully understand the operation and its consequences. Please make an etcd backup before you proceed. Usually, it is recommended to maintain your nodes one by one instead of restarting the whole cluster. Prerequisites  Take an etcd backup prior to shutting down a cluster.</description>
    </item>
    
  </channel>
</rss>