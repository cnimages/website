<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cluster Administration on </title>
    <link>https://cnimages.github.io/website/zh/docs/cluster-administration/</link>
    <description>Recent content in Cluster Administration on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
	<atom:link href="https://cnimages.github.io/website/zh/docs/cluster-administration/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>StorageClass</title>
      <link>https://cnimages.github.io/website/zh/docs/cluster-administration/storageclass/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cnimages.github.io/website/zh/docs/cluster-administration/storageclass/</guid>
      <description></description>
    </item>
    
    <item>
      <title>节点管理</title>
      <link>https://cnimages.github.io/website/zh/docs/cluster-administration/nodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cnimages.github.io/website/zh/docs/cluster-administration/nodes/</guid>
      <description>Kubernetes通过将容器放入容器组中并在节点上运行来运行工作负载。节点可以是虚拟机，也可以是物理机，这取决于集群环境。每个节点都包含运行容器组所需的服务，这些服务由控制平面管理。有关节点的更多信息，请参见Kubernetes的官方文档。
本教程演示了集群管理员对节点可以查看和执行的操作。
前提条件 您需要一个被授予集群管理角色的帐户。 例如，您可以直接以admin身份登录控制台或使用授权创建新角色并将其分配给帐户。
节点状态 只有集群管理员可以访问集群节点。有些节点指标对集群非常重要。因此，管理员有责任监控这些指标并确保节点的可用性。请按照以下步骤查看节点状态。
  单击左上角的平台管理，然后选择集群管理。   如果您已经在导入成员集群时启用了多集群特性，那么您可以选择一个特定集群以查看其应用程序资源。 如果尚未启用该特性，请直接参考下一步。   选择节点管理下的集群节点，您可以在其中查看节点状态的详细信息。  名称：节点名称和子网IP地址。 状态：节点的当前状态，标识节点是否可用。 角色：节点的角色，标识节点是工作节点还是主节点。 CPU：节点的实时CPU使用率。 内存：节点的实时内存使用率。 容器组：节点上容器组的实时使用率。 已分配CPU：该指标是根据节点上容器组总CPU请求计算得出的。即使工作负载使用较少的CPU资源，它也表示该节点上为工作负载预留的CPU量。这个指标对于Kubernetes调度器(kube-scheduler)非常重要，在大多数情况下，它在调度容器组时支持分配较少CPU资源的节点。有关更多细节，请参阅管理容器的资源。 已分配内存：该指标是根据节点上容器组的总内存请求计算得出的。即使工作负载使用较少的内存资源，它也表示为该节点上的工作负载预留的内存量。  备注
CPU和已分配CPU在大多数情况下是不同的，内存和已分配内存也是不同的，这是正常的。作为集群管理员，您需要专注于两个指标，而不仅仅是一个。最佳实践是为每个节点设置资源请求和限制以匹配其实际使用情况。过度分配资源可能导致集群资源利用率低，而分配不足可能导致集群压力大，使集群不健康。   节点管理 从列表中单击一个节点，然后可以转到其详细信息页面。   停止调度/启用调度：在节点重新引导或其他维护期间，将节点标记为不可调度非常有用。如果标记为不可调度，则Kubernetes调度程序不会将新容器组调度到该节点。 此外，这不会影响节点上已经存在的现有工作负载。在KubeSphere中，通过单击节点详细信息页面上的停止调度将节点标记为不可调度。如果再次单击此按钮（启用调度），则该节点将会标记为可调度。
  标签：当您想将容器组分配给特定节点时，节点标签会非常有用。首先标记节点（例如，使用node-role.kubernetes.io/gpu-node标记GPU节点），然后在创建工作负载时在高级设置中添加此标签，以便可以明确容器组在有GPU标记的节点上运行。要添加节点标签，请单击更多操作，然后选择编辑标签。   污点：污染允许节点排斥一系列的容器组。 您可以在节点详细信息页面上添加或删除节点污点。 要添加或删除污点，请单击更多操作，然后从下拉菜单中选择污点管理。
备注
添加污点时请小心，因为它们可能会导致意外行为，从而导致服务不可用。有关更多信息，请参见污点和容忍.   添加和删除节点 在当前版本，您不能直接通过KubeSphere控制台添加或删除节点，但是可以使用KubeKey来完成。 有关更多信息，请参见添加新节点和删除节点。</description>
    </item>
    
    <item>
      <title>集群状态监控</title>
      <link>https://cnimages.github.io/website/zh/docs/cluster-administration/cluster-status-monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cnimages.github.io/website/zh/docs/cluster-administration/cluster-status-monitoring/</guid>
      <description>KubeSphere 提供了对集群的 CPU、内存、网络和磁盘等相关指标的监控。在集群状态监控页面中，您还可以查看历史监控数据并根据节点的使用情况按不同的指标对节点进行排序。
前提条件 您需要一个被授予集群管理角色的帐户。 例如，您可以直接以admin身份登录控制台或使用授权创建新角色并将其分配给帐户。
集群状态监控   单击左上角的平台管理，然后选择集群管理。   如果您已经在导入成员集群时启用了多集群特性，那么您可以选择一个特定集群以查看其应用程序资源。 如果尚未启用该特性，请直接参考下一步。   在监控告警下拉选项里选择“集群状态”以查看集群状态监控的概览，包括集群节点状态、组件状态、集群资源使用情况、ETCD监控和服务组件监控，如下图所示：   集群节点状态   集群节点状态显示在线结点/所有结点状态。 您可以通过单击节点在线状态跳转到如下所示的集群节点页以查看所有节点的实时资源使用情况。   在集群节点中，单击节点名称可以查看结点运行状态中的使用详细信息，包括当前节点中的CPU、内存、容器组、本地存储的信息及其健康状态。   单击监控选项卡，可以根据不同的指标查看节点在特定时期内的运行情况，这些指标包括CPU使用率、CPU平均负载、内存使用率、磁盘使用率、inode使用率、IOPS、磁盘吞吐和网络带宽，如下图所示：   提示
您可以从右上角的下拉列表中自定义时间范围查看历史数据。 组件状态 KubeSphere监控集群中各种服务组件的运行健康状况。 当关键组件发生故障时，系统可能变的不可用。 KubeSphere的监控机制确保该平台可以在组件出现故障时将任何发生的问题通知租户，以便他们可以快速定位问题并采取相应的措施。
  在集群状态监控&amp;rsquo;页面上，单击组件状态里的组件（下面绿色框中的部分）以查看服务组件的状态。   您可以看到所有组件都列在这一页面中。标记为绿色的组件是正常运行的组件，而标记为橙色的组件则需要特别注意，因为它表示此组件存在潜在问题。   提示
标记为橙色的组件可能会在一段时间后变为绿色，原因可能会有所不同，例如重试拉取镜像或重新创建实例。 您可以单击该组件查看其服务详细信息。 群集资源使用情况 集群资源使用情况显示的信息包括集群中所有节点的CPU使用率、内存使用率、磁盘使用率和容器组数量变化。 单击左侧的饼图以切换指标，在右侧的曲线图中显示一段时间内的趋势。 物理资源监控 物理资源监控中的监控数据可以帮助用户更好地观察自己的物理资源，并据此建立正常的资源和集群性能使用阀值。KubeSphere允许用户查看最近7天的集群监控数据，包括CPU使用情况、内存使用情况、CPU平均负载(1分钟/5分钟/15分钟)、inode使用率、磁盘吞吐量(读写)、IOPS(读写)、网络带宽和容器组运行状态。您可以在KubeSphere中查看自定义时间范围和时间间隔内的物理资源历史监控数据。 以下各节简要介绍每个监控指标。 CPU利用率 CPU利用率显示一段时间内CPU资源的使用率。 如果您注意到某一段时间平台的CPU使用率飙升，您必须首先定位占用CPU资源最多的进程。 例如，对于Java应用程序，代码中出现内存泄漏或无限循环的情况可能会出现CPU使用率飙高。 内存利用率 内存是服务器上的重要部件之一，是与CPU通信的桥梁。 因此，内存的性能对机器有很大的影响。 当程序运行时，数据加载、线程并发和I/O缓冲都依赖于内存。 可用内存的大小决定了程序是否可以正常运行以及它是如何运行的。 内存利用率反映了集群内存资源的整体使用情况，显示为给定时刻使用的可用内存的百分比。
CPU平均负载 CPU平均负载是单位时间内系统中处于可运行状态和不中断状态的平均进程数。 也就是说，它是活动进程的平均数量。 请注意，CPU平均负载和CPU利用率之间没有直接关系。 理想情况下，平均负载应该等于CPU的数量。 因此，在查看平均负载时，需要考虑CPU的数量。 只有当平均负载大于cpu数量时，系统才会超载。 KubeSphere为用户提供了三个不同的时间段来查看平均负载：1分钟，5分钟和15分钟。 通常，建议您查看所有这些参数，以全面了解平均负载：</description>
    </item>
    
    <item>
      <title>应用资源监控</title>
      <link>https://cnimages.github.io/website/zh/docs/cluster-administration/application-resources-monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cnimages.github.io/website/zh/docs/cluster-administration/application-resources-monitoring/</guid>
      <description>除了在物理资源级别监控数据外，集群管理员还需要密切跟踪整个平台上的应用资源，例如DevOps项目的数量，以及特定类型的工作负载和服务的数量。应用资源监控提供了平台的资源使用情况和应用程序级别趋势的摘要。
前提条件 您需要一个被授予集群管理角色的帐户。 例如，您可以直接以admin身份登录控制台或使用授权创建新角色并将其分配给帐户。
资源使用情况   单击左上角的平台管理，然后选择集群管理。   如果您已经在导入成员集群时启用了多集群特性，那么您可以选择一个特定集群以查看其应用程序资源。 如果尚未启用该特性，请直接参考下一步。   在监控告警下拉选项里选择应用资源以查看应用程序资源监控的概览，包括群集中所有资源使用情况的摘要，如下图所示。   其中，群集资源使用情况和应用资源使用情况保留最近7天的监控数据，而且支持自定义时间范围查询。   单击特定资源以查看特定时间段内的详细使用情况和趋势，例如集群资源使用情况下的CPU。详细信息页面允许您按项目查看特定的监控数据。 高度交互的仪表板使用户可以自定义时间范围，显示给定时间点的确切资源使用情况。   用量排行 用量排行支持对项目资源使用情况进行排序，因此平台管理员可以了解当前集群中每个项目的资源使用情况，包括CPU使用量，内存使用量，容器组数量以及网络流出速率和网络流入速率。您可以通过下拉列表中的任一指标按升序或降序对项目进行排序。 此功能对于快速查找消耗大量CPU或内存的应用程序（容器组）非常有用。 </description>
    </item>
    
    <item>
      <title>Cluster Shutdown and Restart</title>
      <link>https://cnimages.github.io/website/zh/docs/cluster-administration/shut-down-and-restart-cluster-gracefully/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cnimages.github.io/website/zh/docs/cluster-administration/shut-down-and-restart-cluster-gracefully/</guid>
      <description>This document describes the process of gracefully shutting down your cluster and how to restart it. You might need to temporarily shut down your cluster for maintenance reasons.
警告
Shutting down a cluster is very dangerous. You must fully understand the operation and its consequences. Please make an etcd backup before you proceed. Usually, it is recommended to maintain your nodes one by one instead of restarting the whole cluster. Prerequisites  Take an etcd backup prior to shutting down a cluster.</description>
    </item>
    
  </channel>
</rss>